@import "tailwindcss"; /* imports the actual tailwind */

/* tells Tailwind that dark mode means any element that has dark class or within an element inside a dark class 
was import in actually getting this toggle to work in v4 as opposed to v3.*/
@custom-variant dark (&:where(.dark, .dark *));

/* creates color variables to be reused everywhere */
@theme {
  /* app background and text */
  --color-surface:        #f8fafc;   /* light slate-50-ish */
  --color-on-surface:     #0f172a;   /* slate-900 */

  /* card surfaces + borders + subtle text */
  --color-card:           #0f172a0d; /* slate-900 @ ~5â€“10% */
  --color-border:         #cbd5e1;   /* slate-300 */
  --color-muted:          #64748b;   /* slate-500 */

  /* button colors */
  --color-accent:         #2563eb;   /* blue-600 */
}

/* dark mode overrides that are in the theme layer so Tailwind merges correctly */
@layer theme {
  .dark {
    --color-surface:    #0b1220; /* near slate-950 */
    --color-on-surface: #e2e8f0; /* slate-200 */
    --color-card:       #1f2937; /* slate-800 */
    --color-border:     #334155; /* slate-700 */
    --color-muted:      #94a3b8; /* slate-400 */
    --color-accent:     #60a5fa; /* blue-400 */
  }
}

/* utilizing tokens */
:root { color-scheme: light dark; }
html, body, #root {  /* makes sure the app takes up the full browser window height */
  height: 100%;
}
body {
  /* sets using our earlier defined tokens to set body bg to surface, and body text to on-surface when dark mode is on */
  @apply bg-surface text-on-surface;
}

/* helpers that simplify names to use in jsx that auto changes depending on the mode */
.bg-surface        { background-color: var(--color-surface); }
.bg-card           { background-color: var(--color-card); }
.text-on-surface   { color: var(--color-on-surface); }
.text-muted        { color: var(--color-muted); }
.border-token      { border-color: var(--color-border); }
.bg-accent         { background-color: var(--color-accent); }
.text-accent       { color: var(--color-accent); }

